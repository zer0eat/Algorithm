# 선분교차2_BOJ17387

# input.txt 열기
import sys
sys.stdin = open('input.txt')
input = sys.stdin.readline

A = list(map(int, input().split()))                             # A 라인의 양 끝 점을 리스트로 input 받고
B = list(map(int, input().split()))                             # B 라인의 양 끝 점을 리스트로 input 받는다

# A 라인
Ay = A[3]-A[1]                                                  # A 라인의 양 끝 점의 y값의 변화량을 Ay에 저장하고
Ax = A[2]-A[0]                                                  # A 라인의 양 끝 점의 x값의 변화량을 Ax에 저장한다

if Ay == 0:                                                     # y 값의 변화량이 없을 때
    a = 0                                                       # 기울기는 0이고
    b = A[1]                                                    # y절편은 A[1]이 된다
elif Ax == 0:                                                   # x 값의 변화량이 없을 때
    if B[0] < B[2]:                                             # B라인의 양끝점의 x값이 증가한다면
        if B[0] <= A[0] <= B[2]:                                # A라인의 x 값이 B의 양 끝점 사이에 있다면
            pass                                                # 만날 가능성이 있으므로 pass
        else:                                                   # A라인의 x 값이 B의 양 끝점 사이에 없다면
            print(0)                                            # 만날가능성이 없으므로 0을 출력하고
            quit()                                              # 종료한다
    else:                                                       # B라인의 양끝점의 x값이 감소한다면
        if B[2] <= A[0] <= B[0]:                                # A라인의 x 값이 B의 양 끝점 사이에 있다면
            pass                                                # 만날 가능성이 있으므로 pass
        else:                                                   # A라인의 x 값이 B의 양 끝점 사이에 없다면
            print(0)                                            # 만날가능성이 없으므로 0을 출력하고
            quit()                                              # 종료한다
    if A[1] < A[3]:                                             # A라인의 양 끝점의 y값이 증가한다면
        if A[1] <= B[1] <= A[3] or A[1] <= B[3] <= A[3]:        # A의 양 끝 점의 y값 사이에 B의 끝점 중 하나만이라도 y 값이 포함된다면 
            pass                                                # 만날가능성이 있으므로 pass
        else:                                                   # A의 양 끝 점의 y값 사이에 B의 끝점 중 하나도 포함되지 않는다면
            print(0)                                            # 만날가능성이 없으므로 0을 출력하고
            quit()                                              # 종료한다
    else:                                                       # A라인의 양 끝점의 y값이 감소한다면
        if A[3] <= B[1] <= A[1] or A[3] <= B[3] <= A[1]:        # A의 양 끝 점의 y값 사이에 B의 끝점 중 하나만이라도 y 값이 포함된다면
            pass                                                # 만날가능성이 있으므로 pass
        else:                                                   # A의 양 끝 점의 y값 사이에 B의 끝점 중 하나도 포함되지 않는다면
            print(0)                                            # 만날가능성이 없으므로 0을 출력하고
            quit()                                              # 종료한다
    print(1)                                                    # 위의 모든 조건을 통과했다면 한점에서 만나기 때문에 1을 출력하고
    quit()                                                      # 종료한다
else:                                                           # x의 변화량과 y의 변화량이 둘다 존재하면
    a = Ay/Ax                                                   # y의 변화량 / x의 변화량으로 기울기를 구하고
    b = A[1] - a*A[0]                                           # 한점과 기울기로 y절편의 값을 구한다

# B 라인
By = B[3]-B[1]                                                  # B 라인의 양 끝 점의 y값의 변화량을 By에 저장하고
Bx = B[2]-B[0]                                                  # B 라인의 양 끝 점의 x값의 변화량을 Bx에 저장한다

if By == 0:                                                     # y 값의 변화량이 없을 때
    c = 0                                                       # 기울기는 0이고
    d = B[1]                                                    # y절편은 B[1]이 된다
elif Bx == 0:                                                   # x 값의 변화량이 없을 때
    if A[0] < A[2]:                                             # A라인의 양끝점의 x값이 증가한다면
        if A[0] <= B[0] <= A[2]:                                # B라인의 x 값이 A의 양 끝점 사이에 있다면
            pass                                                # 만날 가능성이 있으므로 pass
        else:                                                   # A라인의 x 값이 B의 양 끝점 사이에 없다면
            print(0)                                            # 만날가능성이 없으므로 0을 출력하고
            quit()                                              # 종료한다
    else:                                                       # A라인의 양끝점의 x값이 감소한다면
        if A[2] <= B[0] <= A[0]:                                # B라인의 x 값이 A의 양 끝점 사이에 있다면
            pass                                                # 만날 가능성이 있으므로 pass
        else:                                                   # A라인의 x 값이 B의 양 끝점 사이에 없다면
            print(0)                                            # 만날가능성이 없으므로 0을 출력하고
            quit()                                              # 종료한다
    if B[1] < B[3]:                                             # B라인의 양 끝점의 y값이 증가한다면
        if B[1] <= A[1] <= B[3] or B[1] <= A[3] <= B[3]:        # B의 양 끝 점의 y값 사이에 A의 끝점 중 하나만이라도 y 값이 포함된다면
            pass                                                # 만날가능성이 있으므로 pass
        else:                                                   # B의 양 끝 점의 y값 사이에 A의 끝점 중 하나도 포함되지 않는다면
            print(0)                                            # 만날가능성이 없으므로 0을 출력하고
            quit()                                              # 종료한다
    else:                                                       # B라인의 양 끝점의 y값이 감소한다면
        if B[3] <= A[1] <= B[1] or B[3] <= A[3] <= B[1]:        # B의 양 끝 점의 y값 사이에 A의 끝점 중 하나만이라도 y 값이 포함된다면
            pass                                                # 만날가능성이 있으므로 pass
        else:                                                   # B의 양 끝 점의 y값 사이에 A의 끝점 중 하나도 포함되지 않는다면
            print(0)                                            # 만날가능성이 없으므로 0을 출력하고
            quit()                                              # 종료한다
    print(1)                                                    # 위의 모든 조건을 통과했다면 한점에서 만나기 때문에 1을 출력하고
    quit()                                                      # 종료한다
else:                                                           # x의 변화량과 y의 변화량이 둘다 존재하면
    c = By/Bx                                                   # y의 변화량 / x의 변화량으로 기울기를 구하고
    d = B[1] - c*B[0]                                           # 한점과 기울기로 y절편의 값을 구한다

# A라인과 B라인을 비교
if a-c == 0:                                                    # 두 라인의 기울기가 같을 때
    if b-d == 0:                                                # 두 라인의 y절편도 같다면 만날 가능성이 있으므로
        if A[0] < A[2]:                                         # A라인의 양 끝점의 x값이 증가한다면
            if B[0] < B[2]:                                     # B라인의 양 끝점의 x값도 증가한다면
                if A[0] <= B[0] <= A[2] or B[0] <= A[0] <= B[2]:    # A의 양끝점 사이에 B값이 있거나 B의 양끝점 사이에 A값이 있다면
                    pass                                        # 만날 가능성이 있으므로 패스하고
                else:                                           # x 값이 만나는 지점이 없다면
                    print(0)                                    # 만날 수 없으므로 0을 출력하고
                    quit()                                      # 종료한다
            else:                                               # B라인의 양 끝점의 x값도 감소한다면
                if A[0] <= B[2] <= A[2] or B[0] <= A[2] <= B[2]:    # A의 양끝점 사이에 B값이 있거나 B의 양끝점 사이에 A값이 있다면
                    pass                                        # 만날 가능성이 있으므로 패스하고
                else:                                           # x 값이 만나는 지점이 없다면
                    print(0)                                    # 만날 수 없으므로 0을 출력하고
                    quit()                                      # 종료한다
        else:                                                   # A라인의 양 끝점의 x값이 감소한다면
            if B[0] < B[2]:                                     # B라인의 양 끝점의 x값도 증가한다면
                if A[2] <= B[0] <= A[0] or B[2] <= A[0] <= B[0]:    # A의 양끝점 사이에 B값이 있거나 B의 양끝점 사이에 A값이 있다면
                    pass                                        # 만날 가능성이 있으므로 패스하고
                else:                                           # x 값이 만나는 지점이 없다면
                    print(0)                                    # 만날 수 없으므로 0을 출력하고
                    quit()                                      # 종료한다
            else:                                               # B라인의 양 끝점의 x값도 감소한다면
                if A[2] <= B[2] <= A[0] or B[2] <= A[2] <= B[0]:    # A의 양끝점 사이에 B값이 있거나 B의 양끝점 사이에 A값이 있다면
                    pass                                        # 만날 가능성이 있으므로 패스하고
                else:                                           # x 값이 만나는 지점이 없다면
                    print(0)                                    # 만날 수 없으므로 0을 출력하고
                    quit()                                      # 종료한다
                    
        if A[1] < A[3]:                                         # A라인의 양 끝점의 y값이 증가한다면
            if B[1] < B[3]:                                     # B라인의 양 끝점의 y값이 증가한다면
                if A[1] <= B[1] <= A[3] or B[1] <= A[1] <= B[3]:    # A의 양끝점 사이에 B값이 있거나 B의 양끝점 사이에 A값이 있다면
                    pass                                        # 만날 가능성이 있으므로 패스하고
                else:                                           # y 값이 만나는 지점이 없다면
                    print(0)                                    # 만날 수 없으므로 0을 출력하고
                    quit()                                      # 종료한다
            else:                                               # B라인의 양 끝점의 y값이 감소한다면
                if A[1] <= B[3] <= A[3] or B[1] <= A[3] <= B[3]:    # A의 양끝점 사이에 B값이 있거나 B의 양끝점 사이에 A값이 있다면
                    pass                                        # 만날 가능성이 있으므로 패스하고
                else:                                           # y 값이 만나는 지점이 없다면
                    print(0)                                    # 만날 수 없으므로 0을 출력하고
                    quit()                                      # 종료한다
        else:                                                   # A라인의 양 끝점의 y값이 감소한다면
            if B[1] < B[3]:                                     # B라인의 양 끝점의 y값이 증가한다면
                if A[3] <= B[1] <= A[1] or B[3] <= A[1] <= B[1]:    # A의 양끝점 사이에 B값이 있거나 B의 양끝점 사이에 A값이 있다면
                    pass                                        # 만날 가능성이 있으므로 패스하고
                else:                                           # y 값이 만나는 지점이 없다면
                    print(0)                                    # 만날 수 없으므로 0을 출력하고
                    quit()                                      # 종료한다
            else:                                               # B라인의 양 끝점의 y값이 감소한다면
                if A[3] <= B[3] <= A[1] or B[3] <= A[3] <= B[1]:    # A의 양끝점 사이에 B값이 있거나 B의 양끝점 사이에 A값이 있다면
                    pass                                        # 만날 가능성이 있으므로 패스하고
                else:                                           # y 값이 만나는 지점이 없다면
                    print(0)                                    # 만날 수 없으므로 0을 출력하고
                    quit()                                      # 종료한다
        print(1)                                                # 위의 모든 조건을 통과했다면 한점에서 만나기 때문에 1을 출력하고
        quit()                                                  # 종료한다
    else:                                                       # 두 라인의 y절편이 다르다면
        print(0)                                                # 두 라인이 평행해서 만날 수 없으므로 0을 출력하고
        quit()                                                  # 종료한다
else:                                                           # 두 라인의 기울기가 다르다면
    x = (d-b)/(a-c)                                             # 만나는 점의 x값을 구하고
    y = a*x +b                                                  # 만나는 점의 y값을 구한다

# 두 라인이 만나는 점을 구했을 때
if A[0] < A[2]:                                                 # A라인의 양 끝점의 x값이 증가한다면
    if A[0]-0.000001 <= x <= A[2]+0.000001:                     # A라인의 x 값 사이에 만나는 지점이 있다면
        pass                                                    # 패스하고
    else:                                                       # A라인의 x 값 사이에 만나는 지점이 없다면
        print(0)                                                # 두 라인이 만날 수 없으므로 0을 출력하고
        quit()                                                  # 종료한다
else:                                                           # A라인의 양 끝점의 x값이 감소한다면
    if A[2]-0.000001 <= x <= A[0]+0.000001:                     # A라인의 x 값 사이에 만나는 지점이 있다면
        pass                                                    # 패스하고
    else:                                                       # A라인의 x 값 사이에 만나는 지점이 없다면
        print(0)                                                # 두 라인이 만날 수 없으므로 0을 출력하고
        quit()                                                  # 종료한다

if A[1] < A[3]:                                                 # A라인의 양 끝점의 y값이 증가한다면
    if A[1]-0.000001 <= y <= A[3]+0.000001:                     # A라인의 y 값 사이에 만나는 지점이 있다면
        pass                                                    # 패스하고
    else:                                                       # A라인의 x 값 사이에 만나는 지점이 없다면
        print(0)                                                # 두 라인이 만날 수 없으므로 0을 출력하고
        quit()                                                  # 종료한다
else:                                                           # A라인의 양 끝점의 y값이 감소한다면
    if A[3]-0.000001 <= y <= A[1]+0.000001:                     # A라인의 y 값 사이에 만나는 지점이 있다면
        pass                                                    # 패스하고
    else:                                                       # A라인의 x 값 사이에 만나는 지점이 없다면
        print(0)                                                # 두 라인이 만날 수 없으므로 0을 출력하고
        quit()                                                  # 종료한다

if B[0] < B[2]:                                                 # B라인의 양 끝점의 x값이 증가한다면
    if B[0]-0.000001 <= x <= B[2]+0.000001:                     # B라인의 x 값 사이에 만나는 지점이 있다면
        pass                                                    # 패스하고
    else:                                                       # A라인의 x 값 사이에 만나는 지점이 없다면
        print(0)                                                # 두 라인이 만날 수 없으므로 0을 출력하고
        quit()                                                  # 종료한다
else:                                                           # B라인의 양 끝점의 x값이 감소한다면
    if B[2]-0.000001 <= x <= B[0]+0.000001:                     # B라인의 x 값 사이에 만나는 지점이 있다면
        pass                                                    # 패스하고
    else:                                                       # A라인의 x 값 사이에 만나는 지점이 없다면
        print(0)                                                # 두 라인이 만날 수 없으므로 0을 출력하고
        quit()                                                  # 종료한다

if B[1] < B[3]:                                                 # B라인의 양 끝점의 y값이 증가한다면
    if B[1]-0.000001 <= y <= B[3]+0.000001:                     # B라인의 y 값 사이에 만나는 지점이 있다면
        pass                                                    # 패스하고
    else:                                                       # A라인의 x 값 사이에 만나는 지점이 없다면
        print(0)                                                # 두 라인이 만날 수 없으므로 0을 출력하고
        quit()                                                  # 종료한다
else:                                                           # B라인의 양 끝점의 y값이 감소한다면
    if B[3]-0.000001 <= y <= B[1]+0.000001:                     # B라인의 y 값 사이에 만나는 지점이 있다면
        pass                                                    # 패스하고
    else:                                                       # A라인의 x 값 사이에 만나는 지점이 없다면
        print(0)                                                # 두 라인이 만날 수 없으므로 0을 출력하고
        quit()                                                  # 종료한다

print(1)                                                        # 위의 조건을 모두 통과했다면 한점에서 만날 수 있으므로 1을 출력한다