# 1로만들기2_BOJ12852

# input.txt 열기
import sys
sys.stdin = open('input.txt')

# input 받기
N = int(sys.stdin.readline().strip())   # 구하고자 하는 숫자를 input 받고

ans = [0, 0, 1, 1]                      # 0부터 3까지 걸리는 횟수를 저장한 리스트를 생성하고

for i in range(4, N+1):                 # 4부터 N까지 반복해서
    C = ans[i-1] + 1                    # C = i보다 1 작은 수가 걸리는 횟수 + 1을 뺀 횟수(1)
    if i % 3 == 0:                      # i가 3으로 나눠 떨어진다면
        A = ans[i//3] + 1               # A = i을 3으로 나눈 수가 걸리는 횟수 + 3으로 나눈 횟수(1)
        if C > A:                       # A보다 C가 크다면
            C = A                       # C를 A로 바꿔준다
    if i % 2 == 0:                      # i가 2로 나눠 떨어진다면
        B = ans[i // 2] + 1             # B = i을 2로 나눈 수가 걸리는 횟수 + 2로 나눈 횟수(1)
        if C > B:                       # B보다 C가 크다면
            C = B                       # C를 B로 바꿔준다
    ans.append(C)                       # C를 append해 i번째 인덱스에 i의 횟수가 저장되도록 한다

print(ans[N])                           # N의 횟수를 출력한다

Q = [N]                                 # Q에 N을 넣은 list를 생성하고
while Q[-1] > 1:                        # Q의 맨 마지막 원소가 1보다 크다면 반복해서
    C = ans[Q[-1] - 1]                  # C에 Q의 맨 마지막 원소보다 1작은 수가 걸리는 횟수로 저장하고
    x = Q[-1] - 1                       # x에 Q의 맨 마지막 원소보다 1작은 수를 저장한다
    if Q[-1] % 3 == 0:                  # Q의 맨 마지막 원소가 3으로 나눠 떨어진다면
        A = ans[Q[-1] // 3]             # A에 Q의 맨 마지막 원소를 3으로 나눈 수가 걸리는 횟수로 저장하고
        if C > A:                       # A가 C보다 작다면
            C = A                       # C를 A로 바꾸고
            x = Q[-1] // 3              # x에 Q의 맨 마지막 원소를 3으로 나눈 수를 저장한다
    if Q[-1] % 2 == 0:                  # Q의 맨 마지막 원소가 2로 나눠 떨어진다면
        B = ans[Q[-1] // 2]             # B에 Q의 맨 마지막 원소를 2으로 나눈 수가 걸리는 횟수로 저장하고
        if C > B:                       # B가 C보다 작다면
            C = B                       # C를 B로 바꾸고
            x = Q[-1] // 2              # x에 Q의 맨 마지막 원소를 2로 나눈 수를 저장한다
    Q.append(x)                         # Q에 x를 append한다
print(*Q)                               # 반복을 마쳤다면 Q에 담긴 원소를 출력한다