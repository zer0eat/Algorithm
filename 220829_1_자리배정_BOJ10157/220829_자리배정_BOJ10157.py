# 자리배정_BOJ10157

# input.txt 열기
import sys
sys.stdin = open('input2.txt')

# input 받기
C, R = map(int, input().split())        # c = 가로의 길이 / R = 세로의 길이
K = int(input())                        # 입장하는 사람의 수

start = [1, 0]                          # 시작 좌표
i = 0                                   # 진행 칸수를 조절할 변수
RC = True                               # 진행 방향을 결정할 변수

while 1:                                # break까지 반복할 때
    if C * R < K:                       # 좌석수보다 입장객의 대기표가 많다면
        print(0)                        # 좌석배정이 안되므로 0을 출력하고
        break                           # 반복문 break

    elif RC == True:                    # RC가 True일 땐 세로방향으로 이동하고
        if i % 2 == 0:                  # i가 짝수일 땐 위로이동
            if K > (R-i):               # 입장번호가 세로줄에 들어갈 사람보다 많다면
                K -= (R-i)              # 입장객을 집어넣고
                start[1] += (R-i)       # 마지막 입장객의 좌표를 나타내기 위해 y좌표에 입장한 사람의 수를 더한다
                i += 1                  # i에 1을 더해 다음 입장객의 수를 조절한다
                RC = False              # 세로 다음엔 가로로 입장하므로 RC를 False로 바꾼다
            elif K <= (R-i):            # 입장번호가 세로줄에 들어갈 사람보다 같거나 작다면
                start[1] += K           # 마지막 입장객의 좌표를 나타내기 위해 y좌표에 입장한 사람의 수를 더한다
                print(*start)           # 마지막 입장객의 좌표를 출력하여 위치를 나타낸 후 반복문을 종료한다
                break
        elif i % 2 != 0:                # i가 홀수일 땐 아래로이동
            if K > (R-i):               # 입장번호가 세로줄에 들어갈 사람보다 많다면
                K -= (R-i)              # 입장객을 집어넣고
                start[1] -= (R-i)       # 마지막 입장객의 좌표를 나타내기 위해 y좌표에 입장한 사람의 수를 뺀다
                i += 1                  # i에 1을 더해 다음 입장객의 수를 조절한다
                RC = False              # 세로 다음엔 가로로 입장하므로 RC를 False로 바꾼다
            elif K <= (R-i):            # 입장번호가 세로줄에 들어갈 사람보다 같거나 작다면
                start[1] -= K           # 마지막 입장객의 좌표를 나타내기 위해 y좌표에 입장한 사람의 수를 뺀다
                print(*start)           # 마지막 입장객의 좌표를 출력하여 위치를 나타낸 후 반복문을 종료한다
                break

    elif RC == False:                   # RC가 False일 땐 가로방향으로 이동하고
        if i % 2 != 0:                  # i가 홀수일 땐 오른쪽으로이동
            if K > (C-i):               # 입장번호가 세로줄에 들어갈 사람보다 많다면
                K -= (C - i)            # 입장객을 집어넣고
                start[0] += (C - i)     # 마지막 입장객의 좌표를 나타내기 위해 x좌표에 입장한 사람의 수를 더한다
                RC = True               # 가로 다음엔 세로로 입장하므로 RC를 True로 바꾼다
            elif K <= (C-i):            # 입장번호가 가로줄에 들어갈 사람보다 같거나 작다면
                start[0] += K           # 마지막 입장객의 좌표를 나타내기 위해 x좌표에 입장한 사람의 수를 더한다
                print(*start)           # 마지막 입장객의 좌표를 출력하여 위치를 나타낸 후 반복문을 종료한다
                break
        elif i % 2 == 0:                # i가 짝수일 땐 왼쪽으로이동
            if K > (C-i):               # 입장번호가 세로줄에 들어갈 사람보다 많다면
                K -= (C - i)            # 입장객을 집어넣고
                start[0] -= (C - i)     # 마지막 입장객의 좌표를 나타내기 위해 x좌표에 입장한 사람의 수를 뺀다
                RC = True               # 가로 다음엔 세로로 입장하므로 RC를 True로 바꾼다
            elif K <= (C-i):            # 입장번호가 가로줄에 들어갈 사람보다 같거나 작다면
                start[0] -= K           # 마지막 입장객의 좌표를 나타내기 위해 x좌표에 입장한 사람의 수를 뺀다
                print(*start)           # 마지막 입장객의 좌표를 출력하여 위치를 나타낸 후 반복문을 종료한다
                break
